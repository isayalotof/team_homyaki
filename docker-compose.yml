name: russia-travel

services:
  db:
    image: postgres:14
    container_name: russia_travel_db
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./docker/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    env_file:
      - ./.env
    networks:
      - russia_travel_network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: russia_travel_backend
    restart: always
    depends_on:
      - db
    env_file:
      - ./.env
    volumes:
      - ./backend:/app
      - ./backend/app/static:/app/app/static
    networks:
      - russia_travel_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: russia_travel_frontend
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - russia_travel_network

networks:
  russia_travel_network:
    driver: bridge

volumes:
  postgres_data: